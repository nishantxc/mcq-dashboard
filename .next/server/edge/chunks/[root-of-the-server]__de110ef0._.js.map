{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/middleware.ts"],"sourcesContent":["// middleware.ts\nimport { NextResponse } from 'next/server'\nimport type { NextRequest } from 'next/server'\n\nexport function middleware(request: NextRequest) {\n  const token = request.cookies.get('token')?.value || ''\n\n  const isLoggedIn = !!token\n  const { pathname } = request.nextUrl\n\n  const publicPaths = ['/login', '/signup']\n\n  const isPublicPath = publicPaths.includes(pathname)\n\n  // Always route root to the login page to avoid showing the landing page\n  if (pathname === '/') {\n    return NextResponse.redirect(new URL('/login', request.url))\n  }\n\n  if (isPublicPath && isLoggedIn) {\n    return NextResponse.redirect(new URL('/home', request.url))\n  }\n\n  if (!isPublicPath && !isLoggedIn) {\n    return NextResponse.redirect(new URL('/login', request.url))\n  }\n\n  return NextResponse.next()\n}\n\n// Ensure middleware runs for app routes and the root path, excluding Next.js internals and static assets\nexport const config = {\n  matcher: [\n    '/',\n    '/((?!_next|.*\\\\..*).*)',\n  ],\n}\n"],"names":[],"mappings":"AAAA,gBAAgB;;;;;AAChB;AAAA;;AAGO,SAAS,WAAW,OAAoB;IAC7C,MAAM,QAAQ,QAAQ,OAAO,CAAC,GAAG,CAAC,UAAU,SAAS;IAErD,MAAM,aAAa,CAAC,CAAC;IACrB,MAAM,EAAE,QAAQ,EAAE,GAAG,QAAQ,OAAO;IAEpC,MAAM,cAAc;QAAC;QAAU;KAAU;IAEzC,MAAM,eAAe,YAAY,QAAQ,CAAC;IAE1C,wEAAwE;IACxE,IAAI,aAAa,KAAK;QACpB,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,QAAQ,GAAG;IAC5D;IAEA,IAAI,gBAAgB,YAAY;QAC9B,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,SAAS,QAAQ,GAAG;IAC3D;IAEA,IAAI,CAAC,gBAAgB,CAAC,YAAY;QAChC,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,QAAQ,GAAG;IAC5D;IAEA,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAGO,MAAM,SAAS;IACpB,SAAS;QACP;QACA;KACD;AACH"}}]
}